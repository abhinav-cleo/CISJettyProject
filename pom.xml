<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>sample-web-app</groupId>
    <artifactId>cis-sample</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>cis-sample Maven Webapp</name>
    <url>http://maven.apache.org</url>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <jetty.version>9.0.5.v20130815</jetty.version>
        <javac.version>1.8</javac.version>
        <jersey.version>2.25</jersey.version>
        <guava.version>14.0</guava.version>
        <slf4j.version>1.5.11</slf4j.version>
        <junit.version>4.8.2</junit.version>
        <mockito.version>1.9.0</mockito.version>
        <slf4j.version>1.5.11</slf4j.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <logback.version>1.1.2</logback.version>
        <stormpath.version>1.2.3</stormpath.version>


        <maven.failsafe.version>2.4.3-alpha-1</maven.failsafe.version>
        <maven.compiler.version>2.5.1</maven.compiler.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.12.1.1</version>
        </dependency>

        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20140107</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-jetty-http</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet-core</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.40</version>
        </dependency>

        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-all</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.9.2</artifactId>
            <version>0.8.2.2</version>
        </dependency>

        <dependency>
            <groupId>com.stormpath.sdk</groupId>
            <artifactId>stormpath-sdk-api</artifactId>
            <version>${stormpath.version}</version>
        </dependency>
        <dependency>
            <groupId>com.stormpath.sdk</groupId>
            <artifactId>stormpath-sdk-impl</artifactId>
            <version>${stormpath.version}</version>
        </dependency>
        <dependency>
            <groupId>com.stormpath.sdk</groupId>
            <artifactId>stormpath-sdk-httpclient</artifactId>
            <version>${stormpath.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.8.1</version>
        </dependency>

        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk</artifactId>
            <version>1.11.75</version>
        </dependency>

		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>amazon-sqs-java-messaging-lib</artifactId>
			<version>1.0.0</version>
			<type>jar</type>
		</dependency>

        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.9.2</artifactId>
            <version>0.8.2.2</version>
        </dependency>

        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <version>3.4.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.3.1</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>cis-sample</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/webapp</directory>
            </resource>
        </resources>
        <plugins>

            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <configuration>
                    <contextPath>/</contextPath>
                    <httpConnector>
                        <port>8680</port>
                    </httpConnector>
                </configuration>
            </plugin>

            <!--&lt;!&ndash; Plugin to execute command  "npm install" and "npm run build" inside /angular directory &ndash;&gt;-->
            <!--<plugin>-->
            <!--<groupId>com.github.eirslett</groupId>-->
            <!--<artifactId>frontend-maven-plugin</artifactId>-->
            <!--<version>1.0</version>-->
            <!--<configuration>-->
            <!--<workingDirectory>src/main/ng2Client</workingDirectory>-->
            <!--<installDirectory>src/main/ng2Client</installDirectory>-->
            <!--</configuration>-->
            <!--<executions>-->
            <!--&lt;!&ndash; It will install nodejs and npm &ndash;&gt;-->
            <!--<execution>-->
            <!--<id>install node and npm</id>-->
            <!--<goals>-->
            <!--<goal>install-node-and-npm</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
            <!--<nodeVersion>v6.9.1</nodeVersion>-->
            <!--<npmVersion>3.10.9</npmVersion>-->
            <!--</configuration>-->
            <!--</execution>-->

            <!--&lt;!&ndash; It will execute command "npm install" inside "/angular" directory &ndash;&gt;-->
            <!--<execution>-->
            <!--<id>npm install</id>-->
            <!--<goals>-->
            <!--<goal>npm</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
            <!--<arguments>install</arguments>-->
            <!--</configuration>-->
            <!--</execution>-->

            <!--&lt;!&ndash; It will execute command "npm build" inside "/angular" directory to clean and create "/dist" directory&ndash;&gt;-->
            <!--<execution>-->
            <!--<id>npm build</id>-->
            <!--<goals>-->
            <!--<goal>npm</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
            <!--<arguments>run build</arguments>-->
            <!--</configuration>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- here the phase you need -->
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/src/main/webapp</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/ng2Client/dist</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

        </plugins>
    </build>


</project>